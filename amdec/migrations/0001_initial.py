# Generated by Django 5.2.6 on 2025-09-10 11:08

import amdec.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AMDECLogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom descriptif du logo (ex: Logo principal, Logo secondaire)', max_length=100, verbose_name='Nom du logo')),
                ('image', models.ImageField(help_text='Formats acceptés: JPG, PNG, SVG (max 5MB)', upload_to=amdec.models.AMDECLogo.logo_upload_path, verbose_name='Fichier image')),
                ('client_name', models.CharField(blank=True, help_text='Nom du client associé à ce logo', max_length=200, null=True, verbose_name='Nom du client')),
                ('is_default', models.BooleanField(default=False, help_text='Utiliser ce logo par défaut pour les nouveaux projets', verbose_name='Logo par défaut')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name="Date d'upload")),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='amdec_logos', to=settings.AUTH_USER_MODEL, verbose_name='Uploadé par')),
            ],
            options={
                'verbose_name': 'Logo AMDEC',
                'verbose_name_plural': 'Logos AMDEC',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AMDECProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom descriptif du système ou processus analysé', max_length=200, verbose_name='Nom du projet')),
                ('reference', models.CharField(help_text='Code de référence unique du projet (ex: AMDEC-2025-001)', max_length=50, unique=True, verbose_name='Référence')),
                ('slug', models.SlugField(help_text='Identifiant URL unique généré automatiquement', max_length=250, unique=True, verbose_name='URL')),
                ('client', models.CharField(help_text="Nom du client ou de l'entreprise", max_length=200, verbose_name='Client')),
                ('analysis_date', models.DateField(default=django.utils.timezone.now, help_text="Date de réalisation de l'analyse AMDEC", verbose_name="Date d'analyse")),
                ('team_members', models.TextField(help_text="Liste des membres de l'équipe d'analyse (noms séparés par des virgules)", verbose_name='Équipe AMDEC')),
                ('objective', models.TextField(help_text='Objectif principal de cette analyse AMDEC', verbose_name='Objectif')),
                ('description', models.TextField(blank=True, help_text='Description détaillée du projet et de son contexte', null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('is_active', models.BooleanField(default=True, help_text='Décocher pour archiver le projet', verbose_name='Actif')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='amdec_projects_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='amdec.amdeclogo', verbose_name='Logo client')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='amdec_projects_modified', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Projet AMDEC',
                'verbose_name_plural': 'Projets AMDEC',
                'ordering': ['-analysis_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FailureMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component', models.CharField(help_text='Composant ou élément du système concerné', max_length=200, verbose_name='Composant')),
                ('failure_mode', models.CharField(help_text='Description du mode de défaillance', max_length=300, verbose_name='Mode de défaillance')),
                ('potential_cause', models.TextField(help_text='Cause(s) potentielle(s) de la défaillance', verbose_name='Cause potentielle')),
                ('effect', models.TextField(help_text='Effet(s) de la défaillance sur le système', verbose_name='Effet')),
                ('gravity', models.IntegerField(help_text='Note de 1 (négligeable) à 10 (catastrophique)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Gravité (G)')),
                ('occurrence', models.IntegerField(help_text='Note de 1 (très rare) à 10 (permanente)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Occurrence (O)')),
                ('detection', models.IntegerField(help_text='Note de 1 (très facile) à 10 (impossible)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Détection (D)')),
                ('preventive_actions', models.TextField(blank=True, help_text='Actions recommandées pour prévenir ou atténuer la défaillance', null=True, verbose_name='Actions préventives')),
                ('responsible', models.CharField(blank=True, help_text='Personne ou service responsable du suivi', max_length=200, null=True, verbose_name='Responsable')),
                ('deadline', models.DateField(blank=True, help_text='Date limite pour la mise en œuvre des actions', null=True, verbose_name='Échéance')),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('IN_PROGRESS', 'En cours'), ('COMPLETED', 'Terminé'), ('CANCELLED', 'Annulé')], default='PENDING', max_length=30, verbose_name='Statut')),
                ('order', models.IntegerField(default=0, help_text="Ordre d'affichage dans le tableau", verbose_name='Ordre')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('notes', models.TextField(blank=True, help_text='Notes et commentaires additionnels', null=True, verbose_name='Notes')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='failures', to='amdec.amdecproject', verbose_name='Projet AMDEC')),
            ],
            options={
                'verbose_name': 'Mode de défaillance',
                'verbose_name_plural': 'Modes de défaillance',
                'ordering': ['-gravity', '-occurrence', '-detection', 'order'],
            },
        ),
        migrations.AddIndex(
            model_name='amdecproject',
            index=models.Index(fields=['-analysis_date'], name='amdec_amdec_analysi_57136b_idx'),
        ),
        migrations.AddIndex(
            model_name='amdecproject',
            index=models.Index(fields=['slug'], name='amdec_amdec_slug_f2ef0e_idx'),
        ),
        migrations.AddIndex(
            model_name='amdecproject',
            index=models.Index(fields=['reference'], name='amdec_amdec_referen_8335c9_idx'),
        ),
        migrations.AddIndex(
            model_name='failuremode',
            index=models.Index(fields=['project', 'order'], name='amdec_failu_project_92dcc8_idx'),
        ),
        migrations.AddIndex(
            model_name='failuremode',
            index=models.Index(fields=['gravity', 'occurrence', 'detection'], name='amdec_failu_gravity_2c10d7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='failuremode',
            unique_together={('project', 'component', 'failure_mode')},
        ),
    ]
